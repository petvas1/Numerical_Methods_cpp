#include <iostream>
#include <fstream>
#include <cmath>
//#include <cstdlib>
#include <fstream>
#include <iomanip>

double pi = M_PI;

using namespace std;

double f(double x)
{
    //integrand
    return exp(-x*x);
}

double Integrate(double a, double b)
{
    //type == closed integrate over [a,b]
    //type == inf integrate over [a,inf]

    double I = 0;
    const int N = 64; //number of Legendre polynomials
    double x[N] = {-0.9993050417357722,-0.9963401167719553,-0.9910133714767443,-0.9833362538846260,-0.9733268277899110,-0.9610087996520538,-0.9464113748584028,-0.9295691721319396,-0.9105221370785028,-0.8893154459951141,-0.8659993981540928,-0.8406292962525803,-0.8132653151227975,-0.7839723589433414,-0.7528199072605319,-0.7198818501716109,-0.6852363130542333,-0.6489654712546573,-0.6111553551723933,-0.5718956462026340,-0.5312794640198946,-0.4894031457070530,-0.4463660172534641,-0.4022701579639916,-0.3572201583376681,-0.3113228719902110,-0.2646871622087674,-0.2174236437400071,-0.1696444204239928,-0.1214628192961206,-0.0729931217877990,-0.0243502926634244,0.0243502926634244,0.0729931217877990,0.1214628192961206,0.1696444204239928,0.2174236437400071,0.2646871622087674,0.3113228719902110,0.3572201583376681,0.4022701579639916,0.4463660172534641,0.4894031457070530,0.5312794640198946,0.5718956462026340,0.6111553551723933,0.6489654712546573,0.6852363130542333,0.7198818501716109,0.7528199072605319,0.7839723589433414,0.8132653151227975,0.8406292962525803,0.8659993981540928,0.8893154459951141,0.91052213707850208,0.9295691721319396,0.9464113748584028,0.9610087996520538,0.9733268277899110,0.9833362538846260,0.9910133714767443,0.9963401167719553,0.9993050417357722};
    double w[N] = {0.0017832807216964,0.0041470332605625,0.0065044579689784,0.0088467598263639,0.0111681394601311,0.0134630478967186,0.0157260304760247,0.0179517157756973,0.0201348231535302,0.0222701738083833,0.0243527025687109,0.0263774697150547,0.0283396726142595,0.0302346570724025,0.0320579283548516,0.0338051618371416,0.0354722132568824,0.0370551285402400,0.0385501531786156,0.0399537411327203,0.0412625632426235,0.0424735151236536,0.0435837245293235,0.0445905581637566,0.0454916279274181,0.0462847965813144,0.0469681828162100,0.0475401657148303,0.0479993885964583,0.0483447622348030,0.0485754674415034,0.0486909570091397,0.0486909570091397,0.0485754674415034,0.0483447622348030,0.0479993885964583,0.0475401657148303,0.0469681828162100,0.0462847965813144,0.0454916279274181,0.0445905581637566,0.0435837245293235,0.0424735151236536,0.0412625632426235,0.0399537411327203,0.0385501531786156,0.0370551285402400,0.0354722132568824,0.0338051618371416,0.0320579283548516,0.0302346570724025,0.0283396726142595,0.0263774697150547,0.0243527025687109,0.0222701738083833,0.0201348231535302,0.0179517157756973,0.0157260304760247,0.0134630478967186,0.0111681394601311,0.0088467598263639,0.0065044579689784,0.0041470332605625,0.0017832807216964};

    int M = 1e4; //number of subintervals
    double b2;
    if (b == INFINITY) {b2 = b; b = 1/a; a = 0;}
    double dx = (b-a)/M;
    for (int j=0;j<M;j++)
    {
        b = a + dx;
        for (int i=0;i<N;i++)
        {
            if (b2 ==INFINITY)
                I += pow(1/((b-a)/2 * x[i] + (a+b)/2),2) * w[i] * f(1/((b-a)/2 * x[i] + (a+b)/2));
                //I += 1/((b-a)/2 * x[i] + (a+b)/2) * w[i] * f(log(1/((b-a)/2 * x[i] + (a+b)/2))); //b = exp(-a)
            else
                I += w[i] * f((b-a)/2*x[i] + (a+b)/2);
            //if (-inf,inf) I += pow(cosh(atanh((b-a)/2*x[i] + (a+b)/2)),2) * w[i] * f(atanh((b-a)/2*x[i] + (a+b)/2));
        }
        a += dx;
    }
    a -= dx; I *= (b-a)/2 ;
    return I;
}

int main()
{
    double x,dx = 0.01, erf_x, erfc_x;
    ofstream fout;
    fout.open("erfx.dat");
    for (x=1e-5; x<=3; x+=dx)
    {
        erf_x = 2/sqrt(pi) * Integrate(0,x);
        erfc_x = 2/sqrt(pi) * Integrate(x,INFINITY);
        fout << x << "\t" << erf_x << "\t" << erfc_x << endl;
    }
    fout.close();
    return 0;
}
